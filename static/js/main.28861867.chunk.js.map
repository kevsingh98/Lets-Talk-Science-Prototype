{"version":3,"sources":["App.js","index.js"],"names":["a","fetch","method","headers","response","json","body","value","Item","s","article","item","className","href","url","target","rel","image","alt","src","thumbnail","contentUrl","name","description","datePublished","Date","toLocaleDateString","undefined","dateStyle","provider","App","React","useState","list","setList","onClick","e","preventDefault","getNews","then","length","map","i","ReactDOM","render","document","getElementById","getNewsBtn","getElementsByClassName","getNewsSection","addEventListener","classList","add"],"mappings":"mRAIA,8BAAAA,EAAA,sEACyBC,MACrB,0HACA,CACEC,OAAQ,MACRC,QAAS,CACP,kBAAmB,KACnB,iBAAkB,OAClB,iBAAkB,qDAClB,kBAAmB,sCAT3B,cACQC,EADR,gBAaqBA,EAASC,OAb9B,cAaQC,EAbR,yBAcSA,EAAKC,OAdd,4C,sBAkEA,SAASC,EAAT,GAAkC,IAAD,MACXC,EADAC,EAAW,EAAjBC,KAId,OACE,oBAAGC,UAAU,UAAUC,KAAMH,EAAQI,IAAKC,OAAO,SAASC,IAAI,aAA9D,UACE,sBAAKJ,UAAU,kBAAf,UACE,qBAAKA,UAAU,iBAAf,SACGF,EAAQO,OACP,qBACEL,UAAU,YACVM,IAAI,GACJC,IAAG,UAAET,EAAQO,aAAV,iBAAE,EAAeG,iBAAjB,aAAE,EAA0BC,eAIrC,oBAAIT,UAAU,iBAAd,SAAgCF,EAAQY,UAE1C,mBAAGV,UAAU,uBAAb,SAAqCF,EAAQa,cAC7C,sBAAKX,UAAU,gBAAf,UACE,sBAAMA,UAAU,gBAAhB,UAnBcH,EAoBAC,EAAQc,cAnB1B,IAAIC,KAAKhB,GAAGiB,wBAAmBC,EAAW,CAAEC,UAAW,YAqBnD,sBAAKhB,UAAU,kBAAf,WACG,UAAAF,EAAQmB,SAAS,GAAGZ,aAApB,eAA2BG,YAC1B,qBACEF,IAAKR,EAAQmB,SAAS,GAAGP,KACzBH,IACET,EAAQmB,SAAS,GAAGZ,MAAMG,UAAUC,WAAa,eAKvD,qBAAKT,UAAU,sBAAf,SAAsCF,EAAQmB,SAAS,GAAGP,gBAOrDQ,MAzFf,WAAgB,IAAD,EACWC,IAAMC,SAAS,MAD1B,mBACNC,EADM,KACAC,EADA,KAQb,OACE,sBAAKtB,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAASA,UAAU,iBACnB,sBAAMA,UAAU,eAAhB,uCAGF,0BAASA,UAAU,UAAnB,UACE,mBAAGA,UAAU,uBAAb,mLAMA,wBAAQuB,QAnBC,SAACC,GACdA,EAAEC,iB,0CACFC,GAAUC,KAAKL,IAiBctB,UAAU,yBAAnC,4CAIA,mBACEA,UAAU,qBACVC,KAAK,oCAFP,oDAQAoB,EAA8B,IAAhBA,EAAKO,OACnB,4BACE,mDAGF,yBAAS5B,UAAU,WAAnB,SACGqB,EAAKQ,KAAI,SAAC9B,EAAM+B,GAAP,OACR,cAAClC,EAAD,CAAcG,KAAMA,GAAT+B,QAPR,SCnDfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAEjD,WACE,IAAMC,EAAaF,SAASG,uBAAuB,mBAAmB,GAChEC,EAAiBJ,SAASG,uBAAuB,WAAW,GAElED,EAAWG,iBAAiB,SAAS,WACnCD,EAAeE,UAAUC,IAAI,sBALjC,K","file":"static/js/main.28861867.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.scss\";\r\nimport { FaFlask } from \"react-icons/fa\";\r\n\r\nasync function getNews() {\r\n  const response = await fetch(\r\n    \"https://bing-news-search1.p.rapidapi.com/news?cc=gb%2C%20us&safeSearch=Off&category=ScienceAndTechnology&textFormat=Raw\",\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"accept-language\": \"en\",\r\n        \"x-bingapis-sdk\": \"true\",\r\n        \"x-rapidapi-key\": \"9bebe1d516msha361dedfc95e4a8p1e93a9jsn5f42a6124aa2\",\r\n        \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n      },\r\n    }\r\n  );\r\n  const body = await response.json();\r\n  return body.value;\r\n}\r\n\r\nfunction App() {\r\n  const [list, setList] = React.useState(null);\r\n\r\n  const search = (e) => {\r\n    e.preventDefault();\r\n    getNews().then(setList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"header\">\r\n        <FaFlask className=\"header__icon\" />\r\n        <span className=\"header__text\">Science News Prototype</span>\r\n      </div>\r\n\r\n      <section className=\"getNews\">\r\n        <p className=\"getNews__description\">\r\n          This is a prototype application created using ReactJS + Mirosoft\r\n          Bing's News Search API to fetch latest Science and Technology Articles\r\n          acorss all trusted providers.\r\n        </p>\r\n\r\n        <button onClick={search} className=\"getNews__button button\">\r\n          Load Science &#38; Technology News\r\n        </button>\r\n\r\n        <a\r\n          className=\"getNews__diaryLink\"\r\n          href=\"https://diary.letstalkscience.xyz\"\r\n        >\r\n          Find out more at the project diary.\r\n        </a>\r\n      </section>\r\n\r\n      {!list ? null : list.length === 0 ? (\r\n        <p>\r\n          <i>No Results Found</i>\r\n        </p>\r\n      ) : (\r\n        <section className=\"articles\">\r\n          {list.map((item, i) => (\r\n            <Item key={i} item={item} />\r\n          ))}\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Item({ item: article }) {\r\n  const formatDate = (s) =>\r\n    new Date(s).toLocaleDateString(undefined, { dateStyle: \"long\" });\r\n\r\n  return (\r\n    <a className=\"article\" href={article.url} target=\"_blank\" rel=\"noreferrer\">\r\n      <div className=\"article__header\">\r\n        <div className=\"article__image\">\r\n          {article.image && (\r\n            <img\r\n              className=\"thumbnail\"\r\n              alt=\"\"\r\n              src={article.image?.thumbnail?.contentUrl}\r\n            />\r\n          )}\r\n        </div>\r\n        <h2 className=\"article__title\">{article.name}</h2>\r\n      </div>\r\n      <p className=\"article__description\">{article.description}</p>\r\n      <div className=\"article__meta\">\r\n        <span className=\"article__date\">\r\n          {formatDate(article.datePublished)}\r\n        </span>\r\n        <div className=\"article__source\">\r\n          {article.provider[0].image?.thumbnail && (\r\n            <img\r\n              alt={article.provider[0].name}\r\n              src={\r\n                article.provider[0].image.thumbnail.contentUrl + \"&w=16&h=16\"\r\n              }\r\n            />\r\n          )}\r\n\r\n          <div className=\"article__sourceName\">{article.provider[0].name}</div>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n(function () {\n  const getNewsBtn = document.getElementsByClassName(\"getNews__button\")[0];\n  const getNewsSection = document.getElementsByClassName(\"getNews\")[0];\n\n  getNewsBtn.addEventListener(\"click\", function () {\n    getNewsSection.classList.add(\"getNews--hidden\");\n  });\n})();\n"],"sourceRoot":""}